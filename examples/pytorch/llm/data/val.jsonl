{"system": "you are a helpful assistant!", "query": "How do we customize the dataset in the Swift LLM Example?", "response": "There are two ways to incorporate your own dataset. 1. The first method is relatively simple. You need to construct a jsonl file with the same format as `data/train.jsonl` (or `data/val.jsonl`) and replace them. You can omit the `val.jsonl` file (delete it), in which case `train_dataset` will split a portion of the data as `val_dataset`. The file must contain `query` and `response` fields, representing the user inquiry and the assistant's answer for instruction fine-tuning, respectively. The `history` and `system` fields are optional. The `history` field is used to support multi-turn conversations, and the format can refer to examples in `data/train.jsonl`. If it's a single-turn conversation, you can either leave this field unset or set it as an empty list. The `system` field is used to support different systems for each dataset sample. If not set, it defaults to `you are a helpful assistant!`. Finally, you need to set `--dataset custom` in `sft.sh` or `infer.sh`. 2. The second method offers more flexibility. You can add a mapping in `utils/dataset.py` under `DATASET_MAPPING`, where the key is the dataset name and the value is a function that retrieves the dataset, which should return an `HfDataset`. For instruction fine-tuning (single-turn dialogue), it should include the `query` and `response` fields, similar to the `alpaca-zh` dataset. For multi-turn dialogue, you need to additionally include the `history` field, similar to the `damo-agent-mini-zh` dataset. If each dataset sample has a different `system`, you need to include the `system` field as well.", "history": [["Hello!", "Hello! I am Swift AI assistant. How can I assist you?"]]}
{"query": "How do we customize the model in the Swift LLM Example?", "response": "If you want to expand the model, you can modify the `MODEL_MAPPING` in the `utils/model.py` file. The `model_id` can be specified as a local path, in which case the `revision` parameter is not used."}
{"query": "How do we customize the dialogue templates in the Swift LLM Example?", "response": "If you want to expand the templates, you can modify the `TEMPLATE_MAPPING` in the `utils/preprocess.py` file."}
